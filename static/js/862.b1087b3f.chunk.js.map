{"version":3,"file":"static/js/862.b1087b3f.chunk.js","mappings":"sNACA,SAAgB,QAAU,0BAA0B,eAAiB,iCAAiC,uBAAyB,yCAAyC,oBAAsB,sCAAsC,oBAAsB,sCAAsC,mBAAqB,qCAAqC,sBAAwB,yC,cCAlX,SAAgB,kBAAoB,wCAAwC,oBAAsB,0CAA0C,YAAc,mC,oDCQ1J,MAAMA,GAAoBC,EAAAA,EAAAA,GAAU,IAC9BC,GAAoBD,EAAAA,EAAAA,GAAU,KAC9BE,GAAeF,EAAAA,EAAAA,GAAU,KAmG/B,GAAeG,EAAAA,EAAAA,GAAU,CACvBC,KAAM,eADR,EAjGsBC,IAElBC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAMG,aAAaC,SAAA,EACjCH,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAMC,aAAaH,SAAA,EACrCI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,2CACHI,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAMG,kBAAkBL,UACxCH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,oEACJI,EAAAA,EAAAA,KAAA,MAAAJ,UACEI,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CACJC,KAAK,WACLC,UAAWC,EAAAA,EACXC,YAAY,mEACZC,SAAU,CAACrB,GACXW,UAAWC,EAAMU,oBACjBC,UAAQ,UAIdhB,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,8DACJI,EAAAA,EAAAA,KAAA,MAAAJ,UACEI,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CACJC,KAAK,4BACLC,UAAWM,EAAAA,EACXH,SAAU,CAACnB,GACXkB,YAAY,8GACZT,UAAWC,EAAMU,oBACjBC,UAAQ,EACRE,QAAQ,IACRC,QAAQ,YAIdnB,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,4CACJI,EAAAA,EAAAA,KAAA,MAAAJ,UACEI,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CACJC,KAAK,UACLC,UAAWM,EAAAA,EACXJ,YAAY,kGACZC,SAAU,CAACnB,GACXS,UAAWC,EAAMU,oBACjBC,UAAQ,EACRE,QAAQ,IACRC,QAAQ,YAIdnB,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,8DACJI,EAAAA,EAAAA,KAAA,MAAAJ,UACEI,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CACJC,KAAK,iBACLC,UAAU,QACVS,KAAK,WACLhB,UAAWC,EAAMgB,kCAO7Bd,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAMiB,eAAenB,SAAA,EACvCI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,2FACHI,EAAAA,EAAAA,KAAA,OAAAJ,UACEI,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAMG,kBAAkBL,UACxCI,EAAAA,EAAAA,KAAA,SAAAJ,SACGoB,OAAOC,KAAKzB,EAAM0B,QAAQC,UAAUC,KAAKC,IAEtC5B,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAKyB,EAAI,QACTrB,EAAAA,EAAAA,KAAA,MAAAJ,UACEI,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CACJC,KAAM,YAAYkB,IAClBjB,UAAWC,EAAAA,EACXQ,KAAK,MACLP,YAAY,mFACZC,SAAU,CAAClB,GACXQ,UAAWC,EAAMU,0BATda,eAoBrBrB,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAMwB,YAAY1B,SAAC,gE,oBCnC5C,EA/DkBJ,KAChB+B,EAAAA,EAAAA,YAAU,KACR/B,EAAMgC,mBAAmBhC,EAAMiC,KAAK,GAEnC,IAUH,OACEzB,EAAAA,EAAAA,KAAA,QAAMH,UAAW,GAAGC,EAAM4B,aAAaC,EAAAA,EAAOC,UAAUhC,SACpDJ,EAAMqC,oBAGNpC,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAMgC,QAAQlC,SAAA,EAChCH,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAMiC,eAAenC,SAAA,EACvCI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,uGACHI,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAMkC,uBAAuBpC,UAC3CH,EAAAA,EAAAA,MAAA,SACEI,UAAWC,EAAMmC,oBACjBC,QAAQ,cAAatC,SAAA,EAErBI,EAAAA,EAAAA,KAAA,SACEa,KAAK,OACLsB,SAvBKC,IACnBA,EAAEC,OAAOC,MAAMC,QAAU/C,EAAMgD,kBAAkBJ,EAAEC,OAAOC,MAAM,GAAG,EAuBrDzC,UAAWC,EAAM2C,oBACjBC,GAAG,iBAEL1C,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EAAM6C,mBACjBC,I,yaACAC,IAAI,iBAEN7C,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,sFAIRJ,EAAMsD,eACL9C,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAMiD,sBAAsBnD,SAAC,2HAIjDI,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACgD,EAAY,CACXtD,SAvCQuD,IAChBzD,EAAM0D,kBAAkBD,EAAY,EAuC5BE,cAAe3D,EAAMqC,mBACrBX,QAAS1B,EAAMqC,qBAEhBrC,EAAM4D,aACLpD,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAMiD,sBAAsBnD,SAAC,8HArCnDI,EAAAA,EAAAA,KAACqD,EAAAA,EAAS,KA2CP,EC1CX,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAVuBC,IAChB,CACL3B,oBAAoB4B,EAAAA,EAAAA,IAA0BD,GAC9CV,cAAcY,EAAAA,EAAAA,IAAwBF,GACtCJ,YAAYO,EAAAA,EAAAA,GAAsBH,GAClC/B,MAAMmC,EAAAA,EAAAA,IAAUJ,MAKO,CACvBhB,kBAAiB,KACjBU,kBAAiB,KACjB1B,mBACF,OACAqC,EAAAA,EANF,CAOEC,E,qFC3BK,MAAMD,EAAoBE,IASPR,EAAAA,EAAAA,IAAQS,EAART,EARF/D,GACfA,EAAMyE,QAIJjE,EAAAA,EAAAA,KAAC+D,EAAS,IAAKvE,KAHbQ,EAAAA,EAAAA,KAACkE,EAAAA,GAAQ,CAACC,GAAG,aAW1B,IAAIH,EAAmBR,IAAK,CAC1BS,QAAQG,EAAAA,EAAAA,IAAUZ,I,+EClBb,MAAMa,EAAoBb,GACxBA,EAAMc,SAASC,MAGXC,EAAsBhB,GAC1BA,EAAMc,SAASpD,QAGXuC,EAA6BD,GACjCA,EAAMc,SAASzC,mBAGX4C,EAAqBjB,GACzBA,EAAMc,SAASI,OAGXhB,EAA2BF,GAC/BA,EAAMc,SAASxB,aAGXa,EAAyBH,GAC7BA,EAAMc,SAASlB,U,2ECnBxB,QAFauB,EAAAA,gBCSb,QARgB,SAAmBC,GACjC,IAAIC,GAAMC,EAAAA,EAAAA,QAAOF,GAIjB,OAHAG,GAA0B,WACxBF,EAAIG,QAAUJ,CAChB,IACOC,CACT,ECPA,IAAII,EAAY,SAAmBJ,EAAKD,GACnB,oBAARC,EAIXA,EAAIG,QAAUJ,EAHZC,EAAID,EAIR,EAqBA,QAnBqB,SAAwBM,EAAQC,GACnD,IAAIC,GAAcN,EAAAA,EAAAA,UAClB,OAAOO,EAAAA,EAAAA,cAAY,SAAUC,GAC3BJ,EAAOF,QAAUM,EAEbF,EAAYJ,SACdC,EAAUG,EAAYJ,QAAS,MAGjCI,EAAYJ,QAAUG,EAEjBA,GAILF,EAAUE,EAASG,EACrB,GAAG,CAACH,GACN,ECrBA,IAAII,EAAwB,CAC1B,aAAc,IACd,aAAc,OACdC,OAAQ,IACRC,WAAY,SACZC,SAAU,SACVC,SAAU,WACV,UAAW,QACXC,IAAK,IACLC,MAAO,KAGLC,EAAoB,SAA2BC,GACjD/E,OAAOC,KAAKsE,GAAuBS,SAAQ,SAAU3E,GACnD0E,EAAKjG,MAAMmG,YAAY5E,EAAKkE,EAAsBlE,GAAM,YAC1D,GACF,EAKI6E,EAAiB,KAiErB,IAAIC,EAAO,WAAiB,EAQxBC,EAAe,CAAC,oBAAqB,kBAAmB,mBAAoB,iBAAkB,YAAa,aAAc,WAAY,YAAa,aAAc,gBAAiB,aAAc,gBAAiB,cAAe,eAAgB,aACnP,UAAW,aACX,gBAAiB,gBAAiB,QAAS,aACvCC,IAASC,SAASC,gBAAgBC,aA6ClCC,EAAmB,SAA0BC,EAAMvB,GACrD,IAAIwB,EAAoBD,EAAKC,kBACzB/F,EAAU8F,EAAK9F,QACfD,EAAU+F,EAAK/F,QACfiG,EAAgBF,EAAKvE,SACrBA,OAA6B,IAAlByE,EAA2BT,EAAOS,EAC7CC,EAAsBH,EAAKI,eAC3BA,OAAyC,IAAxBD,EAAiCV,EAAOU,EACzDrH,GAAQuH,EAAAA,EAAAA,GAA8BL,EAAM,CAAC,oBAAqB,UAAW,UAAW,WAAY,mBAYxG,IAAIM,OAA+BC,IAAhBzH,EAAMoF,MACrBM,GAASJ,EAAAA,EAAAA,QAAO,MAChBD,EAAMqC,EAAehC,EAAQC,GAC7BgC,GAAYrC,EAAAA,EAAAA,QAAO,GACnBsC,GAAuBtC,EAAAA,EAAAA,UAEvBuC,EAAiB,WACnB,IAAItB,EAAOb,EAAOF,QACdsC,EAAiBX,GAAqBS,EAAqBpC,QAAUoC,EAAqBpC,QAvE9E,SAAuBe,GACzC,IAAIjG,EAAQyH,OAAOC,iBAAiBzB,GAEpC,GAAc,OAAVjG,EACF,OAAO,KAGT,IAnB8B2H,EAmB1BC,GAnB0BD,EAmBO3H,EAAdsG,EAlBVuB,QAAO,SAAUC,EAAKC,GAEjC,OADAD,EAAIC,GAAQJ,EAAII,GACTD,CACT,GAAG,CAAC,IAgBAE,EAAYJ,EAAYI,UAE5B,MAAkB,KAAdA,EACK,MAKLzB,GAAsB,eAAdyB,IACVJ,EAAYK,MAAQC,WAAWN,EAAYK,OAASC,WAAWN,EAAYO,kBAAoBD,WAAWN,EAAYQ,iBAAmBF,WAAWN,EAAYS,cAAgBH,WAAWN,EAAYU,aAAe,MAKjN,CACLV,YAAaA,EACbW,YAJgBL,WAAWN,EAAYY,eAAiBN,WAAWN,EAAYa,YAK/EC,WAJeR,WAAWN,EAAYe,mBAAqBT,WAAWN,EAAYgB,iBAMtF,CA4C4GC,CAAc5C,GAEtH,GAAKuB,EAAL,CAIAF,EAAqBpC,QAAUsC,EAE/B,IAAIsB,EA/IR,SAA6BC,EAAYjE,EAAOjE,EAASC,QACvC,IAAZD,IACFA,EAAU,QAGI,IAAZC,IACFA,EAAUkI,KAGP5C,KACHA,EAAiBI,SAASyC,cAAc,aACzBC,aAAa,WAAY,MACxC9C,EAAe8C,aAAa,cAAe,QAC3ClD,EAAkBI,IAGc,OAA9BA,EAAe+C,YACjB3C,SAAS4C,KAAKC,YAAYjD,GAG5B,IAAImC,EAAcQ,EAAWR,YACzBG,EAAaK,EAAWL,WACxBd,EAAcmB,EAAWnB,YACzBI,EAAYJ,EAAYI,UAC5B9G,OAAOC,KAAKyG,GAAa1B,SAAQ,SAAUoD,GACzC,IAAI/H,EAAM+H,EACVlD,EAAepG,MAAMuB,GAAOqG,EAAYrG,EAC1C,IACAyE,EAAkBI,GAClBA,EAAetB,MAAQA,EACvB,IAAIY,EA1CU,SAAmBO,EAAM8C,GACvC,IAAIrD,EAASO,EAAKsD,aAElB,MAAyC,eAArCR,EAAWnB,YAAYI,UAElBtC,EAASqD,EAAWL,WAItBhD,EAASqD,EAAWR,WAC7B,CAgCeiB,CAAUpD,EAAgB2C,GAEvC3C,EAAetB,MAAQ,IACvB,IAAI2E,EAAYrD,EAAemD,aAAehB,EAC1CmB,EAAYD,EAAY5I,EAEV,eAAdmH,IACF0B,EAAYA,EAAYnB,EAAcG,GAGxChD,EAASiE,KAAKC,IAAIF,EAAWhE,GAC7B,IAAImE,EAAYJ,EAAY3I,EAO5B,MALkB,eAAdkH,IACF6B,EAAYA,EAAYtB,EAAcG,GAIjC,CADPhD,EAASiE,KAAKG,IAAID,EAAWnE,GACb+D,EAClB,CA8F+BM,CAAoBvC,EAAgBvB,EAAKnB,OAASmB,EAAKzF,aAAe,IAAKK,EAASC,GAC3G4E,EAASoD,EAAqB,GAC9BW,EAAYX,EAAqB,GAEjCzB,EAAUnC,UAAYQ,IACxB2B,EAAUnC,QAAUQ,EACpBO,EAAKjG,MAAMmG,YAAY,SAAUT,EAAS,KAAM,aAChDsB,EAAetB,EAAQ,CACrB+D,UAAWA,IAZf,CAeF,EAeA,OAJE5E,EAAAA,EAAAA,iBAAgB0C,GAxEU,SAAiCyC,GAC7D,IAAIC,EAAiBC,EAAUF,IAC/BnF,EAAAA,EAAAA,kBAAgB,WACd,IAAIsF,EAAU,SAAiBC,GAC7BH,EAAe/E,QAAQkF,EACzB,EAGA,OADA3C,OAAO4C,iBAAiB,SAAUF,GAC3B,WACL1C,OAAO6C,oBAAoB,SAAUH,EACvC,CACF,GAAG,GACL,CA6DII,CAAwBhD,IAGN0B,EAAAA,EAAAA,eAAc,YAAYuB,EAAAA,EAAAA,GAAS,CAAC,EAAG9K,EAAO,CAChE2C,SAdiB,SAAsB+H,GAClClD,GACHK,IAGFlF,EAAS+H,EACX,EASErF,IAAKA,IAET,EAIA,SAF2B0F,EAAAA,EAAAA,YAAW9D,GCvNtC,EAAmC,0CAAnC,EAA2F,qCAA3F,EAA6I,oC,aCItI,MAAM/F,EAAwCgG,IAI9C,IAJ+C,MACpD8D,EAAK,KACLC,KACGjL,GACJkH,EACC,MAAMgE,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACEnL,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEI,EAAAA,EAAAA,KAACyG,EAAgB,CACf5G,UAAW,GAAGC,KAA0B4K,GAAY5K,OAChDN,KACAgL,IAELE,IACCjL,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAiBF,SAAA,CAAC,SAE/B6K,EAAKG,WAGN,EAIGvK,EAAqCwK,IAI3C,IAJ4C,MACjDL,EAAK,KACLC,KACGjL,GACJqL,EACC,MAAMH,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACEnL,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEI,EAAAA,EAAAA,KAAA,SACEH,UAAW,GAAGC,KAA0B4K,GAAY5K,OAChDN,KACAgL,IAELE,IACCjL,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAiBF,SAAA,CAAC,SAE/B6K,EAAKG,WAGN,C,0CC/CH,MAAMnK,EAAgCmE,IAC3C,IAAKA,EAAO,MAAO,6KACH,EAGLzF,EACV2L,GACAlG,IACC,GAAIA,GAASA,EAAMrC,OAASuI,EAC1B,MAAO,2GAAsBA,oDACf,C","sources":["webpack://social-network/./src/components/Main/Settings/Settings.module.css?e183","webpack://social-network/./src/components/Main/Settings/SettingsInfo/SettingsInfo.module.css?1bf6","components/Main/Settings/SettingsInfo/SettingsInfo.jsx","components/Main/Settings/Settings.jsx","components/Main/Settings/SettingsContainer.jsx","hoc/withAuthRedirect.jsx","selectors/profiles-selectors.ts","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/use-latest/dist/use-latest.esm.js","../node_modules/use-composed-ref/dist/use-composed-ref.esm.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js","webpack://social-network/./src/utils/validators/Forms/ValidationForms.module.css?6ec2","utils/validators/Forms/ValidationForms.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"setting\":\"Settings_setting__04h5F\",\"setting_avatar\":\"Settings_setting_avatar__6kqn9\",\"setting_avatar_wrapper\":\"Settings_setting_avatar_wrapper__JvHG-\",\"setting_avatar_load\":\"Settings_setting_avatar_load__ZNBVk\",\"setting_avatar_file\":\"Settings_setting_avatar_file__fIxnj\",\"setting_avatar_img\":\"Settings_setting_avatar_img__VjMep\",\"setting_avatar_succes\":\"Settings_setting_avatar_succes__VNhB+\"};","// extracted by mini-css-extract-plugin\nexport default {\"setting_info_edit\":\"SettingsInfo_setting_info_edit__uCD5g\",\"setting_field_input\":\"SettingsInfo_setting_field_input__A5KZp\",\"setting_btn\":\"SettingsInfo_setting_btn__qrjCu\"};","import React from 'react';\nimport style from './SettingsInfo.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLength } from '../../../../utils/validators/validators';\nimport {\n  Input,\n  Textarea,\n} from '../../../../utils/validators/Forms/ValidationForms';\n\nconst maxLengthNickName = maxLength(30);\nconst maxLengthTextArea = maxLength(100);\nconst maxLengthUrl = maxLength(100);\n\nconst SettingsInfo = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <section className={style.setting_info}>\n        <b>Обо мне</b>\n        <table className={style.setting_info_edit}>\n          <tbody>\n            <tr>\n              <th>Мой никнейм:</th>\n              <td>\n                <Field\n                  name='fullName'\n                  component={Input}\n                  placeholder='Введите имя...'\n                  validate={[maxLengthNickName]}\n                  className={style.setting_field_input}\n                  required\n                />\n              </td>\n            </tr>\n            <tr>\n              <th>Мои навыки:</th>\n              <td>\n                <Field\n                  name='lookingForAJobDescription'\n                  component={Textarea}\n                  validate={[maxLengthTextArea]}\n                  placeholder='Опишите Ваши навыки...'\n                  className={style.setting_field_input}\n                  required\n                  minRows='2'\n                  maxRows='3'\n                />\n              </td>\n            </tr>\n            <tr>\n              <th>Обо мне:</th>\n              <td>\n                <Field\n                  name='aboutMe'\n                  component={Textarea}\n                  placeholder='Расскажите о себе...'\n                  validate={[maxLengthTextArea]}\n                  className={style.setting_field_input}\n                  required\n                  minRows='2'\n                  maxRows='3'\n                />\n              </td>\n            </tr>\n            <tr>\n              <th>Ищу работу:</th>\n              <td>\n                <Field\n                  name='lookingForAJob'\n                  component='input'\n                  type='checkbox'\n                  className={style.setting_field_job}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n      <hr />\n      <section className={style.setting_social}>\n        <b>Социальные сети</b>\n        <div>\n          <table className={style.setting_info_edit}>\n            <tbody>\n              {Object.keys(props.profile.contacts).map((key) => {\n                return (\n                  <tr key={key}>\n                    <th>{key}:</th>\n                    <td>\n                      <Field\n                        name={`contacts.${key}`}\n                        component={Input}\n                        type='url'\n                        placeholder='Введите URL адрес...'\n                        validate={[maxLengthUrl]}\n                        className={style.setting_field_input}\n                      />\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <button className={style.setting_btn}>Сохранить</button>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'profileInfo',\n})(SettingsInfo);\n","import React, { useEffect } from 'react';\nimport style from '../Settings/Settings.module.css';\nimport border from '../Main.module.css';\nimport SettingsInfo from './SettingsInfo/SettingsInfo.jsx';\nimport Preloader from '../../../utils/OverallComponents/Preloader/Preloader';\nimport downloadImg from '../../../assets/download.png';\n\nconst Settings = (props) => {\n  useEffect(() => {\n    props.getProfileSettings(props.myId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let photoSelected = (e) => {\n    e.target.files.length && props.updateAvatarPhoto(e.target.files[0]);\n  };\n\n  let updateInfo = (profileInfo) => {\n    props.updateProfileInfo(profileInfo);\n  };\n\n  return (\n    <main className={`${style.container} ${border.wrapper}`}>\n      {!props.profileForSettings ? (\n        <Preloader />\n      ) : (\n        <article className={style.setting}>\n          <section className={style.setting_avatar}>\n            <b>Обновить аватарку</b>\n            <div className={style.setting_avatar_wrapper}>\n              <label\n                className={style.setting_avatar_load}\n                htmlFor='input__file'\n              >\n                <input\n                  type='file'\n                  onChange={photoSelected}\n                  className={style.setting_avatar_file}\n                  id='input__file'\n                />\n                <img\n                  className={style.setting_avatar_img}\n                  src={downloadImg}\n                  alt='downloadImg'\n                />\n                <b>Выберите файл</b>\n              </label>\n            </div>\n          </section>\n          {props.updateAvatar && (\n            <aside className={style.setting_avatar_succes}>\n              * Фотография обновлена\n            </aside>\n          )}\n          <hr />\n          <SettingsInfo\n            onSubmit={updateInfo}\n            initialValues={props.profileForSettings}\n            profile={props.profileForSettings}\n          />\n          {props.updateInfo && (\n            <aside className={style.setting_avatar_succes}>\n              * Информация обновлена\n            </aside>\n          )}\n        </article>\n      )}\n    </main>\n  );\n};\nexport default Settings;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\nimport {\n  updateProfileInfo,\n  updateAvatarPhoto,\n  getProfileSettings,\n} from '../../../redux/profiles-reducer';\nimport { getAuthId } from '../../../selectors/auth-selectors';\nimport {\n  getProfilesProfileSetting,\n  getProfilesUpdateAvatar,\n  getProfilesUpdateInfo,\n} from '../../../selectors/profiles-selectors';\nimport Settings from './Settings';\n\nconst mapStateToProps = (state) => {\n  return {\n    profileForSettings: getProfilesProfileSetting(state),\n    updateAvatar: getProfilesUpdateAvatar(state),\n    updateInfo: getProfilesUpdateInfo(state),\n    myId: getAuthId(state),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    updateAvatarPhoto,\n    updateProfileInfo,\n    getProfileSettings,\n  }),\n  withAuthRedirect\n)(Settings);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { getIsAuth } from '../selectors/auth-selectors';\n\nexport const withAuthRedirect = (Component) => {\n  const AuthRedirect = (props) => {\n    if (!props.isAuth) {\n      return <Redirect to='/login' />;\n    }\n\n    return <Component {...props} />;\n  };\n\n  let RedirectContainer = connect(mapStateToProps)(AuthRedirect);\n\n  return RedirectContainer;\n};\n\nlet mapStateToProps = (state) => ({\n  isAuth: getIsAuth(state),\n});\n","import { AppStateType } from \"../redux/redux-store\";\n\nexport const getProfilesPosts = (state: AppStateType) => {\n  return state.profiles.posts;\n};\n\nexport const getProfilesProfile = (state: AppStateType) => {\n  return state.profiles.profile;\n};\n\nexport const getProfilesProfileSetting = (state: AppStateType) => {\n  return state.profiles.profileForSettings;\n};\n\nexport const getProfilesStatus = (state: AppStateType) => {\n  return state.profiles.status;\n};\n\nexport const getProfilesUpdateAvatar = (state: AppStateType) => {\n  return state.profiles.updateAvatar;\n};\n\nexport const getProfilesUpdateInfo = (state: AppStateType) => {\n  return state.profiles.updateInfo;\n};\n","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport default useLatest;\n","import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useLayoutEffect, forwardRef, useRef, createElement } from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\n\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  } // remove padding, since height = content\n\n\n  return height - sizingData.paddingSize;\n};\n\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tabindex', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles(hiddenTextarea);\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var paddingSize = sizingData.paddingSize,\n      borderSize = sizingData.borderSize,\n      sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData); // measure height of a textarea with a single row\n\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', // non-standard\n'tabSize', 'textIndent', // non-standard\n'textRendering', 'textTransform', 'width', 'wordBreak'];\nvar isIE = !!document.documentElement.currentStyle ;\n\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\n\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  var latestListener = useLatest(listener);\n  useLayoutEffect(function () {\n    var handler = function handler(event) {\n      latestListener.current(event);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      window.removeEventListener('resize', handler);\n    };\n  }, []);\n};\n\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n      maxRows = _ref.maxRows,\n      minRows = _ref.minRows,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHeightChange = _ref.onHeightChange,\n      onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"]);\n\n  if (process.env.NODE_ENV !== 'production' && props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n\n  var isControlled = props.value !== undefined;\n  var libRef = useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = useRef(0);\n  var measurementsCacheRef = useRef();\n\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);\n\n    if (!nodeSizingData) {\n      return;\n    }\n\n    measurementsCacheRef.current = nodeSizingData;\n\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n        height = _calculateNodeHeight[0],\n        rowHeight = _calculateNodeHeight[1];\n\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n\n    onChange(event);\n  };\n\n  {\n    useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n  }\n\n  return /*#__PURE__*/createElement(\"textarea\", _extends({}, props, {\n    onChange: handleChange,\n    ref: ref\n  }));\n};\n\nvar index = /* #__PURE__ */forwardRef(TextareaAutosize);\n\nexport default index;\n","// extracted by mini-css-extract-plugin\nexport default {\"input_successful\":\"ValidationForms_input_successful__9AlhO\",\"input_error\":\"ValidationForms_input_error__MXav0\",\"text_error\":\"ValidationForms_text_error__KmgWb\"};","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { WrappedFieldProps } from 'redux-form';\nimport style from './ValidationForms.module.css';\n\nexport const Textarea: React.FC<WrappedFieldProps> = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div>\n      <TextareaAutosize\n        className={`${style.input_successful} ${hasError && style.input_error}`}\n        {...props}\n        {...input}\n      />\n      {hasError && (\n        <div className={style.text_error}>\n          &#9940;\n          {meta.error}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const Input: React.FC<WrappedFieldProps> = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div>\n      <input\n        className={`${style.input_successful} ${hasError && style.input_error}`}\n        {...props}\n        {...input}\n      />\n      {hasError && (\n        <div className={style.text_error}>\n          &#9940;\n          {meta.error}\n        </div>\n      )}\n    </div>\n  );\n};\n","export type FieldValidatorType = (value: string) => string | undefined;\n\nexport const required: FieldValidatorType = (value) => {\n  if (!value) return 'Поле обязательно для заполнения';\n  return undefined;\n};\n\nexport const maxLength =\n  (number: number): FieldValidatorType =>\n  (value) => {\n    if (value && value.length > number)\n      return `Максимальная длина ${number} символов`;\n    return undefined;\n  };\n"],"names":["maxLengthNickName","maxLength","maxLengthTextArea","maxLengthUrl","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","children","className","style","setting_info","_jsx","setting_info_edit","Field","name","component","Input","placeholder","validate","setting_field_input","required","Textarea","minRows","maxRows","type","setting_field_job","setting_social","Object","keys","profile","contacts","map","key","setting_btn","useEffect","getProfileSettings","myId","container","border","wrapper","profileForSettings","setting","setting_avatar","setting_avatar_wrapper","setting_avatar_load","htmlFor","onChange","e","target","files","length","updateAvatarPhoto","setting_avatar_file","id","setting_avatar_img","src","alt","updateAvatar","setting_avatar_succes","SettingsInfo","profileInfo","updateProfileInfo","initialValues","updateInfo","Preloader","compose","connect","state","getProfilesProfileSetting","getProfilesUpdateAvatar","getProfilesUpdateInfo","getAuthId","withAuthRedirect","Settings","Component","mapStateToProps","isAuth","Redirect","to","getIsAuth","getProfilesPosts","profiles","posts","getProfilesProfile","getProfilesStatus","status","useLayoutEffect","value","ref","useRef","useIsomorphicLayoutEffect","current","updateRef","libRef","userRef","prevUserRef","useCallback","instance","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","forceHiddenStyles","node","forEach","setProperty","hiddenTextarea","noop","SIZING_STYLE","isIE","document","documentElement","currentStyle","TextareaAutosize","_ref","cacheMeasurements","_ref$onChange","_ref$onHeightChange","onHeightChange","_objectWithoutPropertiesLoose","isControlled","undefined","useComposedRef","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","window","getComputedStyle","obj","sizingStyle","reduce","acc","prop","boxSizing","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingSize","paddingBottom","paddingTop","borderSize","borderBottomWidth","borderTopWidth","getSizingData","_calculateNodeHeight","sizingData","Infinity","createElement","setAttribute","parentNode","body","appendChild","_key","scrollHeight","getHeight","rowHeight","minHeight","Math","max","maxHeight","min","calculateNodeHeight","listener","latestListener","useLatest","handler","event","addEventListener","removeEventListener","useWindowResizeListener","_extends","forwardRef","input","meta","hasError","touched","error","_ref2","number"],"sourceRoot":""}