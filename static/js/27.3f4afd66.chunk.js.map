{"version":3,"file":"static/js/27.3f4afd66.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Main/Friends/Friends.module.css?49d6","webpack://social-network/./src/utils/OverallComponents/PageSwitching/PageSwitching.module.css?d452","utils/OverallComponents/PageSwitching/PageSwitching.tsx","webpack://social-network/./src/components/Main/Friends/FriendsProfile/FriendsProfile.module.css?dd6e","components/Main/Friends/FriendsProfile/FriendsProfile.jsx","webpack://social-network/./src/utils/OverallComponents/Search/Search.module.css?90be","utils/OverallComponents/Search/Search.jsx","components/Main/Friends/Friends.tsx","components/Main/Friends/FriendsContainer.tsx","hoc/withAuthRedirect.jsx","selectors/users-selectors.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"friends\":\"Friends_friends__jIeQp\",\"friends_error\":\"Friends_friends_error__7YU1L\",\"friendsSwither\":\"Friends_friendsSwither__Pntsh\",\"friendsSwither__btn\":\"Friends_friendsSwither__btn__dW3hg\",\"active\":\"Friends_active__0wy31\",\"friends_error_img\":\"Friends_friends_error_img__vAlKt\"};","// extracted by mini-css-extract-plugin\nexport default {\"pages\":\"PageSwitching_pages__U29he\",\"pages__navigator\":\"PageSwitching_pages__navigator__KpiXI\",\"page\":\"PageSwitching_page__snAwV\",\"pageActive\":\"PageSwitching_pageActive__fe2a6\"};","import React, { useState } from 'react';\nimport style from '../PageSwitching/PageSwitching.module.css';\n\ntype PropsType = {\n  totalCount: number;\n  sizePage: number;\n  searchName: string;\n  searchFriends: boolean;\n  currentPage: number;\n  getUserProfile: (\n    currentPage: number,\n    sizePage: number,\n    searchName: string,\n    searchFriends: boolean\n  ) => void;\n};\n\nconst PageSwitching: React.FC<PropsType> = ({\n  totalCount,\n  sizePage,\n  searchName,\n  searchFriends,\n  currentPage,\n  getUserProfile,\n}) => {\n  let pages = Math.ceil(totalCount / sizePage);\n\n  let totalPages: Array<number> = [];\n\n  for (let i = 0; i < pages; i++) {\n    totalPages.push(i + 1);\n  }\n\n  const [startingPosition, setStartingPosition] = useState<number>(1);\n\n  const leftPageStartingPosition = (startingPosition - 1) * 10 + 1;\n\n  const rightPageStartingPosition = startingPosition * 10;\n\n  const onSetCurrentPage = (e: any) => {\n    //\n    getUserProfile(+e.target.innerText, sizePage, searchName, searchFriends);\n  };\n\n  return totalPages.length > 1 ? ( \n    <footer className={style.pages}>\n      {\n        <span\n          className={style.pages__navigator}\n          onClick={() => {\n            leftPageStartingPosition > 1 &&\n              setStartingPosition(startingPosition - 1);\n          }}\n        >\n          &#171;\n        </span>\n      }\n      <span>\n        {totalPages\n          .filter(\n            (page) =>\n              page >= leftPageStartingPosition &&\n              page <= rightPageStartingPosition\n          )\n          .map((page) => {\n            return (\n              <span\n                className={currentPage === page ? style.pageActive : style.page}\n                onClick={onSetCurrentPage}\n                key={page}\n              >\n                {page}\n              </span>\n            );\n          })}\n      </span>\n      {\n        <span\n          className={style.pages__navigator}\n          onClick={() => {\n            rightPageStartingPosition < totalPages.length &&\n              setStartingPosition(startingPosition + 1);\n          }}\n        >\n          &#187;\n        </span>\n      }\n    </footer>\n  ) : null;\n};\n\nexport default PageSwitching;\n","// extracted by mini-css-extract-plugin\nexport default {\"friendsProfile\":\"FriendsProfile_friendsProfile__ssUdL\",\"friendsProfile__infoProfile_status\":\"FriendsProfile_friendsProfile__infoProfile_status__mIt2R\",\"friendsProfile__addFriendBtn\":\"FriendsProfile_friendsProfile__addFriendBtn__7XoMn\",\"friendsProfile_link\":\"FriendsProfile_friendsProfile_link__Uxz2O\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from '../../../../utils/OverallComponents/Avatar/Avatar';\nimport style from './FriendsProfile.module.css';\n\nconst FriendsProfile = (props) => {\n  return (\n    <li className={style.friendsProfile}>\n      <figure>\n        <NavLink\n          to={'/profile/' + props.id}\n          className={style.friendsProfile_link}\n        >\n          <Avatar photo={props.photos.small} style={`avatar__middle`} />\n        </NavLink>\n      </figure>\n      <figcaption className={style.friendsProfile__infoProfile}>\n        <header className={style.friendsProfile__infoProfile_name}>\n          <NavLink\n            to={'/profile/' + props.id}\n            className={style.friendsProfile_link}\n          >\n            <b>{props.name}</b>\n          </NavLink>\n        </header>\n        <div className={style.friendsProfile__infoProfile_status}>\n          {props.status || <i>Статус не указан</i>}\n        </div>\n      </figcaption>\n      <div>\n        <button\n          className={style.friendsProfile__addFriendBtn}\n          onClick={() => {\n            props.followed\n              ? props.unfollowUser(props.id)\n              : props.followUser(props.id);\n          }}\n          disabled={props.followingInProgress.some((id) => id === props.id)}\n        >\n          {props.followed ? 'Удалить из друзей' : 'Добавить в друзья'}\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default FriendsProfile;\n","// extracted by mini-css-extract-plugin\nexport default {\"search__container\":\"Search_search__container__hyDRe\",\"search__container__elements\":\"Search_search__container__elements__rcBhJ\",\"search__input\":\"Search_search__input__cRskQ\"};","import React from 'react';\nimport style from './Search.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport searchIcon from '../../../assets/search.png';\n\nconst Search = (props) => {\n  return (\n    <article className={style.search__container}>\n      <section className={style.search__container__elements}>\n        <img src={searchIcon} alt='searchIcon' />\n        <form onSubmit={props.handleSubmit}>\n          <Field\n            className={style.search__input}\n            placeholder='Введите имя для поиска...'\n            name='searchName'\n            component='input'\n            type='text'\n          />\n        </form>\n      </section>\n    </article>\n  );\n};\n\nexport default reduxForm({\n  form: 'search',\n})(Search);\n","import React from 'react';\nimport style from './Friends.module.css';\nimport border from '../Main.module.css';\nimport Preloader from '../../../utils/OverallComponents/Preloader/Preloader';\nimport PageSwitching from '../../../utils/OverallComponents/PageSwitching/PageSwitching';\nimport FriendsProfile from './FriendsProfile/FriendsProfile';\nimport Search from '../../../utils/OverallComponents/Search/Search';\nimport noSearch from '../../../assets/noSearch.png';\nimport { MyFriendsProfileType } from '../../../redux/app-reducer';\n\ntype FriendsType = {\n  totalCount: number;\n  sizePage: number;\n  currentPage: number;\n  searchName: string;\n  searchFriends: boolean;\n  getUserProfile: (\n    currentPage: number,\n    sizePage: number,\n    searchName: string,\n    searchFriends: boolean\n  ) => void;\n  profiles: Array<MyFriendsProfileType>;\n  followUser: (userId: number) => void;\n  unfollowUser: (userId: number) => void;\n  followingInProgress: Array<number>;\n};\n\nconst Friends: React.FC<FriendsType> = ({\n  currentPage,\n  sizePage,\n  getUserProfile,\n  totalCount,\n  profiles,\n  followUser,\n  unfollowUser,\n  followingInProgress,\n  searchName,\n  searchFriends,\n}) => {\n  const getUserProfileFunc = (searchName: string, searchFriends: boolean) => {\n    return getUserProfile(currentPage, sizePage, searchName, searchFriends);\n  };\n\n  if (!profiles) {\n    <Preloader />;\n  }\n\n  return (\n    <main className={`${style.friends} ${border.wrapper}`}>\n      <Search\n        onChange={(name: any) => {\n          //\n          getUserProfileFunc(name.searchName, false);\n        }}\n      />\n\n      <section className={style.friendsSwither}>\n        <button\n          onClick={() => {\n            getUserProfileFunc(searchName, true);\n          }}\n          className={`${style.friendsSwither__btn} ${\n            searchFriends && style.active\n          }`}\n        >\n          Мои друзья\n        </button>\n        <button\n          onClick={() => {\n            getUserProfileFunc(searchName, false);\n          }}\n          className={`${style.friendsSwither__btn} ${\n            !searchFriends && style.active\n          }`}\n        >\n          Поиск друзей\n        </button>\n      </section>\n\n      {!profiles ? ( //\n        <article className={style.friends_error}>\n          <img\n            className={style.friends_error_img}\n            src={noSearch}\n            alt='noSearchImg'\n          />\n          <span>Ничего не найдено.</span>\n          <span> Попробуйте снова.</span>\n        </article>\n      ) : (\n        <ul>\n          {profiles.map((profile) => (\n            <FriendsProfile\n              name={profile.name}\n              status={profile.status}\n              key={profile.id}\n              id={profile.id}\n              photos={profile.photos}\n              followed={profile.followed}\n              followUser={(userId: number) => {\n                followUser(userId);\n              }}\n              unfollowUser={(userId: number) => {\n                unfollowUser(userId);\n              }}\n              followingInProgress={followingInProgress}\n            />\n          ))}\n        </ul>\n      )}\n\n      <PageSwitching\n        sizePage={sizePage}\n        totalCount={totalCount}\n        currentPage={currentPage}\n        searchName={searchName}\n        searchFriends={searchFriends}\n        getUserProfile={getUserProfile}\n      />\n    </main>\n  );\n};\n\nexport default Friends;\n","import Friends from './Friends';\nimport { connect } from 'react-redux';\nimport {\n  followUser,\n  getUserProfile,\n  unfollowUser,\n} from '../../../redux/users-reducer';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\nimport {\n  getUsersCurrentPage,\n  getUsersFollowingInProgress,\n  getUsersProfiles,\n  getUsersSearchFriends,\n  getUsersSearchName,\n  getUsersSizePage,\n  getUsersTotalCount,\n} from '../../../selectors/users-selectors';\nimport { AppStateType } from '../../../redux/redux-store';\nimport { MyFriendsProfileType } from '../../../redux/app-reducer';\n\ntype MapStateToPropsType = {\n  totalCount: number;\n  sizePage: number;\n  currentPage: number;\n  searchName: string;\n  searchFriends: boolean;\n  profiles: Array<MyFriendsProfileType>;\n  followingInProgress: Array<number>;\n};\n\ntype MapDispatchToPropsType = {\n  getUserProfile: (\n    currentPage: number,\n    sizePage: number,\n    searchName: string,\n    searchFriends: boolean\n  ) => void;\n  followUser: (userId: number) => void;\n  unfollowUser: (userId: number) => void;\n};\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    profiles: getUsersProfiles(state),\n    currentPage: getUsersCurrentPage(state),\n    sizePage: getUsersSizePage(state),\n    totalCount: getUsersTotalCount(state),\n    searchName: getUsersSearchName(state),\n    searchFriends: getUsersSearchFriends(state),\n    followingInProgress: getUsersFollowingInProgress(state),\n  };\n};\n\nexport default compose(\n  connect<MapStateToPropsType, MapDispatchToPropsType, void, AppStateType>(\n    mapStateToProps,\n    {\n      getUserProfile,\n      followUser,\n      unfollowUser,\n    }\n  ),\n  withAuthRedirect\n)(Friends);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { getIsAuth } from '../selectors/auth-selectors';\n\nexport const withAuthRedirect = (Component) => {\n  const AuthRedirect = (props) => {\n    if (!props.isAuth) {\n      return <Redirect to='/login' />;\n    }\n\n    return <Component {...props} />;\n  };\n\n  let RedirectContainer = connect(mapStateToProps)(AuthRedirect);\n\n  return RedirectContainer;\n};\n\nlet mapStateToProps = (state) => ({\n  isAuth: getIsAuth(state),\n});\n","import { AppStateType } from '../redux/redux-store';\n\nexport const getUsersProfiles = (state: AppStateType) => {\n  return state.users.profiles;\n};\nexport const getUsersCurrentPage = (state: AppStateType) => {\n  return state.users.currentPage;\n};\nexport const getUsersSizePage = (state: AppStateType) => {\n  return state.users.sizePage;\n};\nexport const getUsersTotalCount = (state: AppStateType) => {\n  return state.users.totalCount;\n};\nexport const getUsersSearchName = (state: AppStateType) => {\n  return state.users.searchName;\n};\nexport const getUsersSearchFriends = (state: AppStateType) => {\n  return state.users.searchFriends;\n};\nexport const getUsersFollowingInProgress = (state: AppStateType) => {\n  return state.users.followingInProgress;\n};\n"],"names":["_ref","totalCount","sizePage","searchName","searchFriends","currentPage","getUserProfile","pages","Math","ceil","totalPages","i","push","startingPosition","setStartingPosition","useState","leftPageStartingPosition","rightPageStartingPosition","onSetCurrentPage","e","target","innerText","length","_jsxs","className","style","children","_jsx","onClick","filter","page","map","props","friendsProfile","NavLink","to","id","friendsProfile_link","Avatar","photo","photos","small","friendsProfile__infoProfile","friendsProfile__infoProfile_name","name","friendsProfile__infoProfile_status","status","friendsProfile__addFriendBtn","followed","unfollowUser","followUser","disabled","followingInProgress","some","reduxForm","form","src","alt","onSubmit","handleSubmit","Field","placeholder","component","type","profiles","getUserProfileFunc","Preloader","border","wrapper","Search","onChange","profile","FriendsProfile","userId","PageSwitching","compose","connect","state","getUsersProfiles","getUsersCurrentPage","getUsersSizePage","getUsersTotalCount","getUsersSearchName","getUsersSearchFriends","getUsersFollowingInProgress","withAuthRedirect","Friends","Component","mapStateToProps","isAuth","Redirect","getIsAuth","users"],"sourceRoot":""}